相关类：String，StringBuffer，StringBuilder
       Byte Short Integer Long
       Float Double
       Character
       Boolean
       
a.包装类：  

//////////////////////////////////

数值型包装类公共方法名与数据域名：
(1)MAX_VALUE,MIN_VALUE
(2)byte/short/int/long/float/doubleValue();
(3)toString();
(4)compareTo（type argument）；
(5)valueOf():
    I.整型包装类：Integer.valueOf(8);Integer.valueOf(“8”);Integer.valueOf(“8”，2);
    II.浮点型包装类：Double.valueOf(8);Double.valueOf(“8”);
(6)parseInt/Byte....()
    I.整型包装类：Integer.parseInt("134");Integer.parseInt("134",8);
    II.浮点型包装类：Double.parseDouble("1");
/////////////////////////////////////

1.数值型包装类
数值型包装类无无参构造方法，是不可变类

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    Integer类:
        //构造方法
        Integer i=9;//自动装箱
        Integer j=new Integer("9");
        Integer m=new Integer(9);//不推荐，因为有自动装拆箱机制
        
        System.out.println(Integer.MAX_VALUE);//包装类对应基本数据类型的最大值
        System.out.println(Integer.MIN_VALUE);//包装类对应基本数据类型的最大值
        
        //类型转换,返回对应类型
        byte temp=i.byteValue();
        short temp1=i.shortValue();
        int temp2=i.intValue();
        long temp3=i.longValue();
        float temp4=i.floatValue();
        double temp5=i.doubleValue();
        String temp6=i.toString();
        
        //同类型比较（只能为对应基本数据类型，如果不是必须显式转换）
        i.compareTo(9);//大于返回1，小于返回-1，等于返回0
        
        //将对应数值字符串转换为对应包装类
        int temp7=Integer.parseInt("134");
        int temp8=Integer.parseInt("15",16);//前一个表示要转换的数值字符串，后一个表示要转换的进制,temp8表示对应的十进制数21
        
        //静态方法，创建一个新对象，并将它初始化为指定字符串表示的值
        Integer temp9=Integer.valueOf(8);
        Integer temp10=Integer.valueOf("8");
        Integer temp11=Integer.valueOf("8",16);
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////        
    Double：
      Double i=9.0;//自动装箱
        System.out.println(Double.MAX_VALUE);//包装类对应基本数据类型的最大值
        System.out.println(Double.MIN_VALUE);//包装类对应基本数据类型的最大值
        //类型转换,返回对应类型
        byte temp=i.byteValue();
        short temp1=i.shortValue();
        int temp2=i.intValue();
        long temp3=i.longValue();
        float temp4=i.floatValue();
        double temp5=i.doubleValue();
        String temp6=i.toString();
        //同类型比较（只能为对应基本数据类型，如果不是必须显式转换）
        i.compareTo(9.0);//大于返回1，小于返回-1，等于返回0
        //将对应数值字符串转换为对应包装类
        Double temp7=Double.parseDouble("134");
        //静态方法，创建一个新对象，并将它初始化为指定字符串表示的值
        Double temp9=Double.valueOf(8);
        Double temp10=Double.valueOf("8.0");
        //静态方法，创建一个新对象，并将它初始化为指定字符串表示的值
        Double.parseDouble("1");
